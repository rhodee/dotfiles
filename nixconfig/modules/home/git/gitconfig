[user]
  name = rhodee
  email = info@rhodee.us
[help]
  autocorrect = prompt
[url "git@github.com:rhodee/"]
  insteadOf = "me:"
[url "ssh://git@github.com/rhodee/"]
  insteadOf = https://github.com/rhodee/
[url "ssh://git@github.com/"]
  insteadOf = https://github.com/
[color]
  ui = auto
[color "branch"]
  current = cyan reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[advice]
  statusHints = false
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[column]
  ui = auto
[alias]
  co = checkout
  ci = commit
  cl = clone
  po = push origin
  pro = pull --rebase origin
  fo = fetch origin
  rem = remote -v
  rshow = remote show origin
  st = status --short --branch --ignore-submodules
  br = "branch -i"
  cp = cherry-pick
  merff = merge --ff-only
  up = remote update --prune
  tag = tag -a
  aa = add --all
  au = add -u
  ap = add --patch
  # stash operations
  sl = stash list
  sa = stash apply
  ss = stash save
  ssh = stash show -p
  diff = "!f() { 〈git diff --color-words --ignore-all-space $1..$2〉 }; f"
  dft = difftool
  # find git tracked-files
  f = "!git ls-files | grep -i"
  get = grep --color=auto --break --ignore-case -Ii --untracked --before-context 1 --after-context 2 -e
  # view logs
  last = log -1 HEAD --stat
  l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  hist ="!git l --pretty=format:\"%h -- %s [%cd, %cn, %cr]\" --stat -42 --graph --date=short"
  lg ="!git l -C --stat --decorate"
  lgp ="!git l -C --stat -p --decorate"
  rl = reflog --format=reflog --date=format:'%Y-%m-%d %H:%m'
  # rollback
  oops = reset --soft "HEAD^"
  unstage = reset HEAD
  shit = "!gitk --all $( git fsck --no-reflog | awk '/dangling commit/ {print $3}' )"
[commit]
  template = ~/.gitmessage.txt
  verbose = true
[pager]
  diff = delta
  log = delta
  reflog = delta
  show = delta
[interactive]
  diffFilter = delta --color-only
[delta]
  features = catppuccin-macchiato
  line-numbers = true
  navigate = true
[delta "interactive"]
  keep-plus-minus-markers = false
[core]
  excludesfile = ~/.gitignore_global
  quotepath = false
  # Do not consider trailing space change as a cause for merge
  whitespace = -trailing-space,space-before-tab
  autocrlf = false
  legacyheaders = false
  pager = delta
[receive]
  denyNonFastForwards = true
[fetch]
  prune = true
  prunetags = true
[push]
  # 'git push' only work on current branch
  default = current
  # When pushing, also push tags whose commit-ishs are now reachable upstream
  followTags = true
  autoSetupRemote = true
[rerere]
  # Enable the recording of resolved conflicts
  # So identical hunks can be resolved automatically in future
  enabled = true
  autoupdate = true
[status]
  # Recursively through untracked directories to display all contents
  showUntrackedFiles = all
[grep]
  extendedRegexp = true
  lineNumber = true
[branch]
  # When remote, rebase is set to true for tracked branches
  # of remote-tracking branches.
  autoSetupRebase = remote
  sort = -committerdate
[tag]
  sort = version:refname
[pull]
  ff = only
  rebase = only
[rebase]
  autosquash = true
  autostash = true
  # 'stack' those PRs ;)
  updateRefs = true
[merge]
  conflictstyle = zdiff3
[mergetool]
  prompt = true
[diff]
  external = difft
  algorithm = histogram
  colorMoved = plain
  mnemonicPrefix = true
  renames = true
[difftool]
  prompt = false
[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[credential "https://source.developers.google.com"]
  helper = gcloud.sh
[credential]
    helper = osxkeychain
[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
[sequence]
  editor = interactive-rebase-tool
[gpg]
  program = gpg
[init]
 defaultBranch = main
[pretty]
    # for all format strings, see 'man git-log' or 'git help log' under 'PRETTY FORMATS'
    # default format is git reflog --format='%C(auto)%h%d %gd: %gs'
    # %h - abbreviated commit hash
    # %d - ref names
    # %gd - reflog selector, e.g., refs/stash@{1}
    # %gs - reflog subject
    # use --date=format:'%Y-%m-%d %H:%m' to change the reflog date format.
    reflog = %C(auto)%h %gd%d %gs %C(240)%as%C(auto)

